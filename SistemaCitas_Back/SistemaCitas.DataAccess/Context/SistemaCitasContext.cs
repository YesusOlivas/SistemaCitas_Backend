// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SistemaCitas.Entities.Entities;

namespace SistemaCitas.DataAccess.Context;

public partial class SistemaCitasContext : DbContext
{
    public static string ConnectionString { get; set; }
    public SistemaCitasContext(DbContextOptions<SistemaCitasContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Citas> Citas { get; set; }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<Especialidades> Especialidades { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Citas>(entity =>
        {
            entity.HasKey(e => e.Cita_Id).HasName("PRIMARY");

            entity.HasIndex(e => e.Clie_Id, "Clie_Id");

            entity.HasIndex(e => e.Espe_Id, "Espe_Id");

            entity.Property(e => e.Cita_Detalles).HasMaxLength(255);
            entity.Property(e => e.Cita_Estado)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValueSql("'A'")
                .IsFixedLength();
            entity.Property(e => e.Cita_Fecha).HasColumnType("datetime");
            entity.Property(e => e.Cita_Hora).HasColumnType("time");

            entity.HasOne(d => d.Clie).WithMany(p => p.Citas)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Citas_ibfk_1");

            entity.HasOne(d => d.Espe).WithMany(p => p.Citas)
                .HasForeignKey(d => d.Espe_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Citas_ibfk_2");
        });

        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.Clie_Id).HasName("PRIMARY");

            entity.HasIndex(e => e.Clie_Dni, "Clie_Dni").IsUnique();

            entity.Property(e => e.Clie_Apellido)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Clie_Dni).HasMaxLength(20);
            entity.Property(e => e.Clie_FechaNacimiento).HasColumnType("datetime");
            entity.Property(e => e.Clie_Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Clie_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValueSql("'M'")
                .IsFixedLength();
        });

        modelBuilder.Entity<Especialidades>(entity =>
        {
            entity.HasKey(e => e.Espe_Id).HasName("PRIMARY");

            entity.Property(e => e.Espe_Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.Usua_Id).HasName("PRIMARY");

            entity.HasIndex(e => e.Clie_Id, "Clie_Id");

            entity.HasIndex(e => e.Usua_Nombre, "Usua_Nombre").IsUnique();

            entity.Property(e => e.Usua_Contraseña)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Usua_Nombre)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Clie).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.Clie_Id)
                .HasConstraintName("Usuarios_ibfk_1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}